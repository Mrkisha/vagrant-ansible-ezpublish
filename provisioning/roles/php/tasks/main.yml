---
# tasks file for php
- name: Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"

- name: Check the php version
  command: php -v
  ignore_errors: True
  register: php_version_result
  when: ansible_os_family == "Debian" and use_php56 == true
  tags: [packages, php55, packages]

- name: Register the current extension directory
  command: php-config --extension-dir
  ignore_errors: True
  register: php_extension_directory
  when: ansible_os_family == "Debian" and use_php56 == true and php_version_result|failed == false
  failed_when: "'/usr/lib/php5/20131226' in php_extension_directory.stdout"
  tags: [php, php56, packages]

- name: Remove dotdeb if installing php 5.6 (dotdeb)
  # Remove specified repository from sources list.
  apt_repository: repo='deb http://packages.dotdeb.org wheezy-php55 all' state=absent update_cache=yes
  environment: env
  when: ansible_os_family == "Debian" and ansible_distribution_version|float >= 12.10 and use_php56 == true
  tags: [php, php56, packages]

- name: Add php 5.6 repository if needed for quantal and newer (ondrej)
  # Add specified repository into sources list.
  apt_repository: repo='ppa:ondrej/php5-5.6/ubuntu trusty main' state=present update_cache=yes
  environment: env
  when: ansible_os_family == "Debian" and ansible_distribution_version|float >= 12.10 and use_php56 == true
  tags: [php, php56, packages]

- name: Install the php libraries (APT)
  apt: name={{ item }} state=latest update_cache=yes
  with_items: php_packages
  environment: env
  when: ansible_os_family == "Debian" and php_packages|lower != 'none'
  tags: [php, packages]

- name: Make timezone configuration available to php
  copy: dest={{ php_mods_available }}/timezone.ini content="; configuration for php timzeonze\n;[Date]\ndate.timezone=America/New_York\n"
  ignore_errors: true
  when: ansible_os_family == "Debian"

- name: Enable timezone configuration available to php
  command: php5enmod timezone
  ignore_errors: true
  when: ansible_os_family == "Debian"

- name: Install xdebug
  apt: name={{ item }} state=present update_cache=yes
  # located in vars/main.yml
  with_items: php_xdebug
  environment: env
  when: ansible_os_family == "Debian" and use_xdebug == true
  tags: [php, packages, xdebug, dev]

- name: Make sure the xdebug.ini does not reference the extension dir
  # Because php, the xdebug.ini generated by apt has something along
  # the lines of zend_extension=/usr/lib/php5/20121212/xdebug.so
  # which sometimes gets updated, and sometimes does not
  copy: dest={{ php_mods_available }}/xdebug.ini content="; configuration for php xdebug module\n; priority=20\nzend_extension=xdebug.so\n"
  ignore_errors: true
  when: ansible_os_family == "Debian" and use_xdebug == true

- name: Enable XDebug
  command: php5enmod xdebug
  ignore_errors: true
  when: ansible_os_family == "Debian" and use_xdebug == true
